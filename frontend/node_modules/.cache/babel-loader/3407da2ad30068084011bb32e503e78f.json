{"ast":null,"code":"var _jsxFileName = \"/home/dhairya/Desktop/Scribble/skribbl-/frontend/src/game/words/words.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst worddict = require('./words.json');\n\nfunction Words({\n  user,\n  drawer,\n  update_curr_word\n}) {\n  _s();\n\n  const [popup, setpopup] = useState(true);\n\n  function generate_random_word() {\n    return worddict.english[parseInt(Math.random() * worddict.english.length)];\n  }\n\n  var s1 = generate_random_word();\n  var s2 = generate_random_word();\n  var s3 = generate_random_word();\n\n  function set_random_word(s) {\n    update_curr_word(s);\n    setpopup(false); //socket.emit(\"start_timer\",user.room);\n  }\n\n  socket.on(\"Received_new_word\", data => {\n    set_random_word(data.word);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: popup && user.id === drawer.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          set_random_word(s1);\n          socket.emit(\"word_has_changed\", s1);\n        },\n        children: s1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          set_random_word(s2);\n          socket.emit(\"word_has_changed\", s2);\n        },\n        children: s2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          set_random_word(s3);\n          socket.emit(\"word_has_changed\", s3);\n        },\n        children: s3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Words, \"K4Ga0Nw66kvUOGTxaYJ8AwKrvKQ=\");\n\n_c = Words;\nexport default Words;\n\nvar _c;\n\n$RefreshReg$(_c, \"Words\");","map":{"version":3,"sources":["/home/dhairya/Desktop/Scribble/skribbl-/frontend/src/game/words/words.js"],"names":["React","worddict","require","Words","user","drawer","update_curr_word","popup","setpopup","useState","generate_random_word","english","parseInt","Math","random","length","s1","s2","s3","set_random_word","s","socket","on","data","word","id","emit"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,cAAD,CAAxB;;AAEA,SAASC,KAAT,CAAe;AAACC,EAAAA,IAAD;AAAMC,EAAAA,MAAN;AAAaC,EAAAA;AAAb,CAAf,EAA8C;AAAA;;AAC1C,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBC,QAAQ,CAAC,IAAD,CAAjC;;AACA,WAASC,oBAAT,GAA+B;AAC3B,WAAOT,QAAQ,CAACU,OAAT,CAAiBC,QAAQ,CAACC,IAAI,CAACC,MAAL,KAAcb,QAAQ,CAACU,OAAT,CAAiBI,MAAhC,CAAzB,CAAP;AACH;;AACD,MAAIC,EAAE,GAACN,oBAAoB,EAA3B;AACA,MAAIO,EAAE,GAACP,oBAAoB,EAA3B;AACA,MAAIQ,EAAE,GAACR,oBAAoB,EAA3B;;AACA,WAASS,eAAT,CAAyBC,CAAzB,EAA2B;AACvBd,IAAAA,gBAAgB,CAACc,CAAD,CAAhB;AACAZ,IAAAA,QAAQ,CAAC,KAAD,CAAR,CAFuB,CAGvB;AACH;;AACDa,EAAAA,MAAM,CAACC,EAAP,CAAU,mBAAV,EAA+BC,IAAD,IAAQ;AAClCJ,IAAAA,eAAe,CAACI,IAAI,CAACC,IAAN,CAAf;AACH,GAFD;AAGA,sBACA;AAAA,cACKjB,KAAK,IAAIH,IAAI,CAACqB,EAAL,KAAYpB,MAAM,CAACoB,EAA5B,gBACG;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAE,MAAI;AACjBN,UAAAA,eAAe,CAACH,EAAD,CAAf;AACAK,UAAAA,MAAM,CAACK,IAAP,CAAY,kBAAZ,EAA+BV,EAA/B;AACH,SAHD;AAAA,kBAGIA;AAHJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAQ,QAAA,OAAO,EAAE,MAAI;AACjBG,UAAAA,eAAe,CAACF,EAAD,CAAf;AACAI,UAAAA,MAAM,CAACK,IAAP,CAAY,kBAAZ,EAA+BT,EAA/B;AACH,SAHD;AAAA,kBAGIA;AAHJ;AAAA;AAAA;AAAA;AAAA,cALJ,eASI;AAAQ,QAAA,OAAO,EAAE,MAAI;AACjBE,UAAAA,eAAe,CAACD,EAAD,CAAf;AACAG,UAAAA,MAAM,CAACK,IAAP,CAAY,kBAAZ,EAA+BR,EAA/B;AACH,SAHD;AAAA,kBAGIA;AAHJ;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,GAgBG;AAjBR;AAAA;AAAA;AAAA;AAAA,UADA;AAsBH;;GAtCQf,K;;KAAAA,K;AAwCT,eAAeA,KAAf","sourcesContent":["import React from 'react';\r\nconst worddict = require('./words.json');\r\n\r\nfunction Words({user,drawer,update_curr_word}){    \r\n    const [popup,setpopup] = useState(true);\r\n    function generate_random_word(){\r\n        return worddict.english[parseInt(Math.random()*worddict.english.length)];\r\n    }\r\n    var s1=generate_random_word();\r\n    var s2=generate_random_word();\r\n    var s3=generate_random_word();\r\n    function set_random_word(s){\r\n        update_curr_word(s);\r\n        setpopup(false);\r\n        //socket.emit(\"start_timer\",user.room);\r\n    }\r\n    socket.on(\"Received_new_word\",(data)=>{\r\n        set_random_word(data.word);\r\n    })\r\n    return(\r\n    <div>\r\n        {popup && user.id === drawer.id?\r\n            <div>\r\n                <button onClick={()=>{\r\n                    set_random_word(s1) \r\n                    socket.emit(\"word_has_changed\",s1);\r\n                }}>{s1}</button>\r\n                <button onClick={()=>{\r\n                    set_random_word(s2) \r\n                    socket.emit(\"word_has_changed\",s2);\r\n                }}>{s2}</button>\r\n                <button onClick={()=>{\r\n                    set_random_word(s3) \r\n                    socket.emit(\"word_has_changed\",s3);\r\n                }}>{s3}</button>\r\n            </div>\r\n            :\r\n            null\r\n        }\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Words;"]},"metadata":{},"sourceType":"module"}