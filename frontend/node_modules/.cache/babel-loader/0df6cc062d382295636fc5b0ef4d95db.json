{"ast":null,"code":"var _jsxFileName = \"/home/dhairya/Desktop/Scribble/skribbl-/frontend/src/game/scores/scores.js\",\n    _s = $RefreshSig$();\n\nimport \"./scores.scss\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Scores({\n  socket,\n  roomname,\n  drawer\n}) {\n  _s();\n\n  const [userlist, setUserList] = useState([]);\n  useEffect(() => {\n    socket.emit(\"updateusers\", {\n      roomname\n    });\n    socket.on(\"userList\", data => {\n      setUserList(data.users);\n    });\n  }, [socket, roomname]);\n  console.log(\"Kemcho\", userlist);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scores\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Scores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), userlist.map(i => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [i.id === drawer.id ? /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"**\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: i.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: Number(i.score)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Scores, \"ug3IRbw335rzUoU5l0f2wU9LOmg=\");\n\n_c = Scores;\nexport default Scores;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scores\");","map":{"version":3,"sources":["/home/dhairya/Desktop/Scribble/skribbl-/frontend/src/game/scores/scores.js"],"names":["useState","useEffect","Scores","socket","roomname","drawer","userlist","setUserList","emit","on","data","users","console","log","map","i","id","username","Number","score"],"mappings":";;;AAAA,OAAO,eAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AACA,SAASC,MAAT,CAAgB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,QAAV;AAAoBC,EAAAA;AAApB,CAAhB,EAA8C;AAAA;;AAC5C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACAC,EAAAA,SAAS,CAAC,MAAI;AACZE,IAAAA,MAAM,CAACK,IAAP,CAAY,aAAZ,EAA0B;AAACJ,MAAAA;AAAD,KAA1B;AACAD,IAAAA,MAAM,CAACM,EAAP,CAAU,UAAV,EAAsBC,IAAD,IAAQ;AAC3BH,MAAAA,WAAW,CAACG,IAAI,CAACC,KAAN,CAAX;AACD,KAFD;AAGD,GALQ,EAKP,CAACR,MAAD,EAASC,QAAT,CALO,CAAT;AAMAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBP,QAArB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGA,QAAQ,CAACQ,GAAT,CAAcC,CAAD,IAAO;AACjB,0BACE;AAAA,mBACGA,CAAC,CAACC,EAAF,KAAOX,MAAM,CAACW,EAAd,gBACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADC,GAGD,IAJF,eAME;AAAA,oBAAKD,CAAC,CAACE;AAAP;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE;AAAA,oBAAKC,MAAM,CAACH,CAAC,CAACI,KAAH;AAAX;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAWD,KAZF,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GA3BQjB,M;;KAAAA,M;AA4BT,eAAeA,MAAf","sourcesContent":["import \"./scores.scss\";\nimport { useState, useEffect } from \"react\";\nfunction Scores({ socket, roomname, drawer }) {\n  const [userlist, setUserList] = useState([]);\n  useEffect(()=>{\n    socket.emit(\"updateusers\",{roomname})\n    socket.on(\"userList\",(data)=>{\n      setUserList(data.users)\n    })\n  },[socket, roomname])\n  console.log(\"Kemcho\",userlist)\n  return(\n    <div className=\"scores\">\n      <h1>Scores</h1>\n      {userlist.map((i) => {\n          return(\n            <div>\n              {i.id===drawer.id?\n              <h2>**</h2>\n              :\n              null\n              }\n              <h2>{i.username}</h2>\n              <h3>{Number(i.score)}</h3>\n            </div>\n          );\n        })}\n    </div>\n  );\n}\nexport default Scores;\n"]},"metadata":{},"sourceType":"module"}