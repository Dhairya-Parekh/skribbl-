{"ast":null,"code":"var _jsxFileName = \"/home/nsr/new2/skribbl-/chatfrontend/src/game/canvas/canvas.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport CanvasDraw from \"react-canvas-draw\";\nimport React, { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Drawercanvas({\n  socket\n}) {\n  _s();\n\n  const CanvasRef = useRef();\n  const [brushSize, setbrushSize] = useState(12);\n  const [brushColor, setbrushColor] = useState(\"#444\");\n\n  function Change_Brush_Size(e) {\n    setbrushSize(Number(e.currentTarget.value));\n  }\n\n  function Change_Brush_Color(e) {\n    setbrushColor(e.currentTarget.value);\n  }\n\n  function Clear_Canvas(e) {\n    CanvasRef.current.clear();\n    const drawing_data = CanvasRef.current.getSaveData();\n    socket.emit(\"draw\", drawing_data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CanvasDraw, {\n      canvasWidth: 800,\n      canvasHeight: 800,\n      ref: CanvasRef,\n      hideGrid: true,\n      brushRadius: brushSize,\n      brushColor: brushColor,\n      onChange: () => {\n        const drawing_data = CanvasRef.current.getSaveData();\n        socket.emit(\"draw\", drawing_data);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        defaultValue: \"10\",\n        type: \"range\",\n        min: \"1\",\n        max: \"30\",\n        onChange: Change_Brush_Size\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"color\",\n        id: \"toolColorPicker\",\n        onChange: Change_Brush_Color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: Clear_Canvas,\n        children: \"Eraser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Drawercanvas, \"maY6iDMGkkduitTngV72QHi4bY0=\");\n\n_c = Drawercanvas;\n\nfunction Watchercanvas({\n  socket\n}) {\n  _s2();\n\n  const [drawing_data, setDrawdata] = useState(\"\");\n  socket.on(\"do_drawing\", data => {\n    setDrawdata(data.draw_data);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CanvasDraw, {\n      canvasWidth: 800,\n      canvasHeight: 800,\n      disabled: true,\n      hideInterface: true,\n      hideGrid: true,\n      immediateLoading: true,\n      saveData: drawing_data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Watchercanvas, \"svCoLgewrUrETgbSl/uhMn6mQpQ=\");\n\n_c2 = Watchercanvas;\n\nfunction Canvas({\n  user,\n  drawer,\n  socket\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: user.id === drawer.id ? /*#__PURE__*/_jsxDEV(Drawercanvas, {\n      socket: socket\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Watchercanvas, {\n      socket: socket\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_c3 = Canvas;\nexport default Canvas;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Drawercanvas\");\n$RefreshReg$(_c2, \"Watchercanvas\");\n$RefreshReg$(_c3, \"Canvas\");","map":{"version":3,"sources":["/home/nsr/new2/skribbl-/chatfrontend/src/game/canvas/canvas.js"],"names":["CanvasDraw","React","useState","useRef","Drawercanvas","socket","CanvasRef","brushSize","setbrushSize","brushColor","setbrushColor","Change_Brush_Size","e","Number","currentTarget","value","Change_Brush_Color","Clear_Canvas","current","clear","drawing_data","getSaveData","emit","Watchercanvas","setDrawdata","on","data","draw_data","Canvas","user","drawer","id"],"mappings":"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","sourcesContent":["import CanvasDraw from \"react-canvas-draw\";\r\nimport React, { useState, useRef} from \"react\";\r\n\r\nfunction Drawercanvas({socket}){\r\n    const CanvasRef = useRef()\r\n    const [brushSize, setbrushSize] = useState(12);\r\n    const [brushColor, setbrushColor] = useState(\"#444\")\r\n    function Change_Brush_Size(e){\r\n        setbrushSize(Number(e.currentTarget.value))\r\n    }\r\n    function Change_Brush_Color(e){\r\n        setbrushColor(e.currentTarget.value)\r\n    }\r\n    function Clear_Canvas(e){\r\n        CanvasRef.current.clear()\r\n        const drawing_data = CanvasRef.current.getSaveData()\r\n        socket.emit(\"draw\",drawing_data)\r\n    }\r\n    return(\r\n        <div>\r\n            <CanvasDraw \r\n                canvasWidth = {800}\r\n                canvasHeight= {800}\r\n                ref = { CanvasRef }\r\n                hideGrid\r\n                brushRadius = {brushSize}\r\n                brushColor = {brushColor}\r\n                onChange={() => \r\n                    {\r\n                        const drawing_data = CanvasRef.current.getSaveData()\r\n                        socket.emit(\"draw\",drawing_data);\r\n                    }\r\n                } \r\n            />\r\n            <div>\r\n                <input\r\n                    defaultValue=\"10\"\r\n                    type=\"range\"\r\n                    min=\"1\"\r\n                    max=\"30\"\r\n                    onChange={Change_Brush_Size}\r\n                />\r\n                <input\r\n                    type=\"color\"\r\n                    id=\"toolColorPicker\"\r\n                    onChange={Change_Brush_Color}\r\n                />\r\n                <button\r\n                    onClick={Clear_Canvas}>             \r\n                Eraser</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Watchercanvas({socket}){\r\n    const [drawing_data, setDrawdata] = useState(\"\")\r\n    socket.on(\"do_drawing\",(data)=>{\r\n        setDrawdata(data.draw_data)\r\n    })\r\n    return(\r\n        <div>\r\n            <CanvasDraw\r\n                canvasWidth = {800}\r\n                canvasHeight= {800}\r\n                disabled\r\n                hideInterface\r\n                hideGrid\r\n                immediateLoading\r\n                saveData={drawing_data}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Canvas({user, drawer, socket }){\r\n    return(\r\n        <div>\r\n            {user.id===drawer.id ? \r\n                <Drawercanvas\r\n                    socket={socket}\r\n                />\r\n            :\r\n                <Watchercanvas\r\n                    socket={socket}\r\n                />\r\n            }\r\n        </div>\r\n    );    \r\n}\r\nexport default Canvas;"]},"metadata":{},"sourceType":"module"}