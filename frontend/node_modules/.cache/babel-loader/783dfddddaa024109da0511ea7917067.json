{"ast":null,"code":"var _jsxFileName = \"/home/nsr/new2/skribbl-/chatfrontend/src/game/chat/chat.js\",\n    _s = $RefreshSig$();\n\nimport \"./chat.scss\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat({\n  user,\n  drawer,\n  socket,\n  currentword\n}) {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    socket.on(\"message\", data => {\n      let temp = messages;\n      temp.push({\n        userId: data.userId,\n        username: data.username,\n        text: data.text\n      });\n      setMessages([...temp]);\n    });\n  }, [socket, messages]);\n\n  const sendData = () => {\n    if (text !== \"\" && user.id !== drawer.id) {\n      if (currentword === text) {\n        socket.emit(\"chat\", `${user.username} guessed correctly!!!`);\n      } else {\n        socket.emit(\"chat\", text);\n      }\n\n      setText(\"\");\n    }\n  };\n\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  useEffect(scrollToBottom, [messages]);\n  console.log(messages, \"mess\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-name\",\n      children: /*#__PURE__*/_jsxDEV(\"ceter\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: currentword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-message\",\n      children: [messages.map(i => {\n        if (i.username === user.username) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message mess-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: i.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: i.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [i.text, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: i.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this);\n        }\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"send\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Type your answer here\",\n        value: text,\n        onChange: e => setText(e.target.value),\n        onKeyPress: e => {\n          if (e.key === \"Enter\") {\n            sendData();\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendData,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"HOZAuVicutE7kHuMO7If7mHVKC8=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/nsr/new2/skribbl-/chatfrontend/src/game/chat/chat.js"],"names":["React","useState","useEffect","useRef","Chat","user","drawer","socket","currentword","text","setText","messages","setMessages","on","data","temp","push","userId","username","sendData","id","emit","messagesEndRef","scrollToBottom","current","scrollIntoView","behavior","console","log","map","i","e","target","value","key"],"mappings":"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","sourcesContent":["import \"./chat.scss\";\nimport React, { useState, useEffect, useRef } from \"react\";\nfunction Chat({ user,drawer, socket,currentword }) {\n  const [text, setText] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    socket.on(\"message\", (data) => {\n\n      let temp = messages;\n      temp.push({\n        userId: data.userId,\n        username: data.username,\n        text: data.text,\n      });\n      setMessages([...temp]);\n    });\n  }, [socket, messages]);\n\n  const sendData = () => {\n    if (text !== \"\" && user.id !== drawer.id ) {\n      if(currentword === text){\n        socket.emit(\"chat\",`${user.username} guessed correctly!!!`);\n      }\n      else{\n        socket.emit(\"chat\",text);}\n      setText(\"\");\n    }\n  };\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(scrollToBottom, [messages]);\n\n  console.log(messages, \"mess\");\n\n  return(\n    <div className=\"chat\">\n      <div className=\"user-name\">\n      <ceter>\n        <h2>\n            {currentword}\n        </h2>\n      </ceter>\n      </div>\n      <div className=\"chat-message\">\n        {messages.map((i) => {\n          if (i.username === user.username) {\n            return (\n              <div className=\"message mess-right\">\n                <p>{i.text}</p>\n                <span>{i.username}</span>\n              </div>\n            );\n          } else {\n            return (\n              <div className=\"message\">\n                <p>{i.text} </p>\n                <span>{i.username}</span>\n              </div>\n            );\n          }\n        })}\n        <div ref={messagesEndRef} />\n      </div>\n      <div className=\"send\">\n        <input\n          placeholder=\"Type your answer here\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          onKeyPress={(e) => {\n            if (e.key === \"Enter\") {\n              sendData();\n            }\n          }}\n        ></input>\n        <button onClick={sendData}>Send</button>\n      </div>\n        </div>\n  );\n}\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}