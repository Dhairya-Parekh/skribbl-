{"version":3,"sources":["aes.js","chat/chat.js","store/action/index.js","process/process.js","home/home.js","App.js","store/reducer/index.js","store/reducer/process.js","index.js"],"names":["aes256","require","secret_key","Chat","username","roomname","socket","useState","text","setText","messages","setMessages","dispatch","useDispatch","useEffect","on","data","encrypt","msg","cipher","ans","startsWith","decrypt","to_Decrypt","cypher","type","payload","process","console","log","temp","push","userId","sendData","to_Encrypt","emit","messagesEndRef","useRef","current","scrollIntoView","behavior","className","style","fontSize","map","i","ref","placeholder","value","onChange","e","target","onKeyPress","key","onClick","Process","userlist","setUserList","users","forEach","room","class","Homepage","setusername","setroomname","modalisshown","setmodalstate","roomisshown","setroomstate","alert","window","location","reload","Roomdetails","to","rand_room","Math","floor","random","toString","io","connect","Appmain","props","start","setstart","Fragment","match","params","App","path","exact","component","rootReducers","combineReducers","ProcessReducer","state","action","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.48a4a241.chunk.js","sourcesContent":["var aes256 = require(\"aes256\");\n//the secret key used for encrypting and decrypting messages\nvar secret_key = \"uI2ooxtwHeI6q69PS98fx9SWVGbpQohO\";\n//returns the encrypted text\nexport const to_Encrypt = (text) => {\n  var encrypted = aes256.encrypt(secret_key, text);\n  return encrypted;\n};\n//welcome message is not decrypted\nexport const to_Decrypt = (cipher, username) => {\n  if (cipher.startsWith(\"Welcome\")) {\n    return cipher;\n  }\n\n  if (cipher.startsWith(username)) {\n    return cipher;\n  }\n  //decryped message is returned\n  var decrypted = aes256.decrypt(secret_key, cipher);\n  return decrypted;\n};\n","import \"./chat.scss\";\nimport { to_Decrypt, to_Encrypt } from \"../aes.js\";\nimport { process } from \"../store/action/index\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\n//gets the data from the action object and reducers defined earlier\nfunction Chat({ username, roomname, socket }) {\n  const [text, setText] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  const dispatch = useDispatch();\n  \n  const dispatchProcess = (encrypt, msg, cipher) => {\n    dispatch(process(encrypt, msg, cipher));\n  };\n\n  useEffect(() => {\n    socket.on(\"message\", (data) => {\n      //decypt the message\n      const ans = to_Decrypt(data.text, data.username);\n      dispatchProcess(false, ans, data.text);\n      console.log(ans);\n      let temp = messages;\n      temp.push({\n        userId: data.userId,\n        username: data.username,\n        text: ans,\n      });\n      setMessages([...temp]);\n    });\n  }, [socket]);\n\n  const sendData = () => {\n    if (text !== \"\") {\n      //encrypt the message here\n      const ans = to_Encrypt(text);\n      socket.emit(\"chat\", ans);\n      setText(\"\");\n    }\n  };\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(scrollToBottom, [messages]);\n\n  console.log(messages, \"mess\");\n\n  return (\n    <div className=\"chat\">\n      <div className=\"user-name\">\n        <h2>\n          {username} <span style={{ fontSize: \"0.7rem\" }}>in {roomname}</span>\n        </h2>\n      </div>\n      <div className=\"chat-message\">\n        {messages.map((i) => {\n          if (i.username === username) {\n            return (\n              <div className=\"message\">\n                <p>{i.text}</p>\n                <span>{i.username}</span>\n              </div>\n            );\n          } else {\n            return (\n              <div className=\"message mess-right\">\n                <p>{i.text} </p>\n                <span>{i.username}</span>\n              </div>\n            );\n          }\n        })}\n        <div ref={messagesEndRef} />\n      </div>\n      <div className=\"send\">\n        <input\n          placeholder=\"enter your message\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          onKeyPress={(e) => {\n            if (e.key === \"Enter\") {\n              sendData();\n            }\n          }}\n        ></input>\n        <button onClick={sendData}>Send</button>\n      </div>\n    </div>\n  );\n}\nexport default Chat;\n","export const process = (encrypt, text, cypher) => {\n  return {\n    type: \"PROCESS\",\n    payload: {\n      encrypt,\n      text,\n      cypher,\n    },\n  };\n};","import \"./process.scss\";\nimport { useState, useEffect } from \"react\";\nfunction Process({ socket, roomname }) {\n  const [userlist, setUserList] = useState([]);\n  useEffect(()=>{\n    socket.emit(\"updateusers\")\n    socket.on(\"userList\",(data)=>{\n      var temp = [];\n      data.users.forEach(names);\n      function names(value){\n        if(value.room === roomname){\n          temp.push(value.username)\n        }\n      }\n      setUserList([...temp])\n    })\n  },[])\n  return (\n    <div class=\"process\">\n      <h1>Players</h1>\n      {userlist.map((i) => {\n          return(\n            <h2>{i}</h2>\n          );\n        })}\n    </div>\n  );\n}\nexport default Process;\n","import React, { useState } from \"react\";\nimport \"./home.scss\";\nimport { Link } from \"react-router-dom\";\n\nfunction Homepage({ socket }) {\n  const [username, setusername] = useState(\"\");\n  const [roomname, setroomname] = useState(\"\");\n  const [modalisshown, setmodalstate] = useState(\"\");\n  const [roomisshown, setroomstate] = useState(\"\");\n  //activates joinRoom function defined on the backend\n  const sendData = () => {\n    if (username !== \"\" && roomname !== \"\") {\n      socket.emit(\"joinRoom\", { username, roomname });\n      //if empty error message pops up and returns to the same page\n    } else {\n      alert(\"username and roomname are must !\");\n      window.location.reload();\n    }\n  };\n  function Join_Room(){\n    setmodalstate(true);\n  }\n  function Create_Room(){\n    setroomstate(true);\n    var rand_room = Math.floor(Math.random()*100000);\n    setroomname(rand_room.toString());\n  }\n  function Roomdetails(){\n    return(\n      <div>\n        <p>You are in room {roomname}</p>\n        <p>Share this room number with your friends !</p>\n        <div>\n          <Link to={`/chat/${roomname}/${username}`}>\n            <button onClick={sendData}>Join Room</button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"homepage\">\n      <h1>Skribbl Skribbl</h1>\n      <input\n        placeholder=\"Input your user name\"\n        value={username}\n        onChange={(e) => setusername(e.target.value)}\n      ></input>\n      {modalisshown || roomisshown ? null : <button onClick={Create_Room}>Create a new room</button>}\n      {modalisshown || roomisshown ? null : <button onClick={Join_Room}>Join a existing room</button>}\n      {modalisshown ? \n        <div>\n          <input\n            type = \"text\"\n            placeholder=\"Input the room name\"\n            value={roomname}\n            onChange={(e) => setroomname(e.target.value)}\n          ></input>\n          <Link to={`/chat/${roomname}/${username}`}>\n            <button onClick={sendData}>Join</button>\n          </Link>\n        </div> \n      : null}\n    {roomisshown ? <Roomdetails /> : null}\n  </div>\n  );\n}\n\nexport default Homepage;\n","import Chat from \"./chat/chat\";\nimport Process from \"./process/process\";\nimport Home from \"./home/home\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.scss\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport io from \"socket.io-client\";\n\nconst socket = io.connect('/');\n\nfunction Appmain(props) {\n  const [start, setstart] = useState(false);\n  function startgame(){\n    setstart(true);\n  }\n  return (\n    <React.Fragment>      \n      <div className=\"right\">\n        <Process \n          socket={socket} \n          roomname={props.match.params.roomname}\n        />\n      </div>\n        <div>\n          {start ? <div className=\"left\"><Chat username={props.match.params.username} roomname={props.match.params.roomname} socket={socket}/></div> : <button onClick={startgame}>Start Game</button>}\n        </div>\n      \n    </React.Fragment>\n  );\n}\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/\" exact>\n            <Home socket={socket} />\n          </Route>\n          <Route path=\"/chat/:roomname/:username\" component={Appmain} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","// import the reducers\nimport { ProcessReducer } from \"./process\";\nimport { combineReducers } from \"redux\";\n// define the object and call the action\nconst rootReducers = combineReducers({\n  ProcessReducer: ProcessReducer,\n});\n// else return default root reducer\nexport default rootReducers;","//initialiaze the function with two arguments\nexport const ProcessReducer = (state = {}, action) => {\n  switch (action.type) {\n    //returns updated state\n    case \"PROCESS\":\n      return { ...action.payload };\n    //else the current state is retained\n    default:\n      return state;\n  }\n};","import App from \"./App\";\nimport rootReducers from \"./store/reducer/index\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport React from \"react\";\n\n//here we create an object to store the current state of the application\nconst store = createStore(rootReducers);\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}