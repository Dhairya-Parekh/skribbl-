[{"/home/dhairya/Desktop/Scribble/skribbl-/chatfrontend/src/index.js":"1","/home/dhairya/Desktop/Scribble/skribbl-/chatfrontend/src/App.js":"2","/home/dhairya/Desktop/Scribble/skribbl-/chatfrontend/src/store/reducer/index.js":"3","/home/dhairya/Desktop/Scribble/skribbl-/chatfrontend/src/lobby/lobby.js":"4","/home/dhairya/Desktop/Scribble/skribbl-/chatfrontend/src/store/reducer/process.js":"5","/home/dhairya/Desktop/Scribble/skribbl-/chatfrontend/src/home/home.js":"6","/home/dhairya/Desktop/Scribble/skribbl-/chatfrontend/src/game/game.js":"7","/home/dhairya/Desktop/Scribble/skribbl-/chatfrontend/src/game/scores/scores.js":"8","/home/dhairya/Desktop/Scribble/skribbl-/chatfrontend/src/game/words/words.js":"9","/home/dhairya/Desktop/Scribble/skribbl-/chatfrontend/src/game/canvas/canvas.js":"10","/home/dhairya/Desktop/Scribble/skribbl-/chatfrontend/src/game/chat/chat.js":"11","/home/dhairya/Desktop/Scribble/skribbl-/chatfrontend/src/game/timer/timer.js":"12"},{"size":435,"mtime":1638077895065,"results":"13","hashOfConfig":"14"},{"size":2088,"mtime":1638085059465,"results":"15","hashOfConfig":"14"},{"size":290,"mtime":1638077895065,"results":"16","hashOfConfig":"14"},{"size":3034,"mtime":1638082075799,"results":"17","hashOfConfig":"14"},{"size":291,"mtime":1638077895065,"results":"18","hashOfConfig":"14"},{"size":3538,"mtime":1638077998175,"results":"19","hashOfConfig":"14"},{"size":5176,"mtime":1638080609082,"results":"20","hashOfConfig":"14"},{"size":680,"mtime":1638077998175,"results":"21","hashOfConfig":"14"},{"size":339,"mtime":1638077998175,"results":"22","hashOfConfig":"14"},{"size":2617,"mtime":1638077998175,"results":"23","hashOfConfig":"14"},{"size":2245,"mtime":1638077998175,"results":"24","hashOfConfig":"14"},{"size":1547,"mtime":1638077998175,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1n7s408",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},"/home/dhairya/Desktop/Scribble/skribbl-/chatfrontend/src/index.js",[],["53","54"],"/home/dhairya/Desktop/Scribble/skribbl-/chatfrontend/src/App.js",["55"],"/home/dhairya/Desktop/Scribble/skribbl-/chatfrontend/src/store/reducer/index.js",[],"/home/dhairya/Desktop/Scribble/skribbl-/chatfrontend/src/lobby/lobby.js",["56","57"],"import React,{useState, useEffect} from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Scores from '../game/scores/scores';\r\nfunction Userlist({roomname,socket}){\r\n    const [userlist,setUserlist] = useState([])\r\n    useEffect(()=>{\r\n        socket.emit(\"updateusers\",roomname);\r\n        socket.on(\"userList\",(data)=>{\r\n            setUserlist(data.users)\r\n        });\r\n    },[socket])\r\n    return(\r\n        <div>\r\n          <h1>Players</h1>\r\n          {userlist.map((i) => {\r\n              return(\r\n                <h2>{i.username}</h2>\r\n              );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Lobby({user,socket}){\r\n    const [startGame,setStartGame] = useState(false)\r\n    const [round, setRound] = useState(3)\r\n    const [time, setTime] = useState(20)\r\n    function Start_The_Game(){\r\n        socket.emit(\"update_settings\",{r: round,t: time})\r\n        socket.emit(\"Start_Game_For_All\")\r\n    }\r\n    function Change_Rounds(e){\r\n        setRound(e.currentTarget.value)\r\n    }\r\n    function Change_Time(e){\r\n        setTime(e.currentTarget.value)\r\n    }\r\n    \r\n    socket.on(\"Start_Game\",()=>{\r\n        setStartGame(true);\r\n    })\r\n    \r\n    return(\r\n        <div>\r\n        {\r\n            startGame?\r\n            <div>\r\n                <Redirect to={`/game/${user.room}/${user.username}`}/>\r\n            </div>\r\n            :\r\n            <div>\r\n                <div>\r\n                    <Scores\r\n                        roomname={user.room}\r\n                        socket={socket}\r\n                    />\r\n                </div>\r\n                {\r\n                    user.is_active?\r\n                    <div>\r\n                        <div>\r\n                            <h3>\r\n                                Rounds ka slider\r\n                            </h3>\r\n                            <input\r\n                                defaultValue=\"3\"\r\n                                type=\"range\"\r\n                                min=\"2\"\r\n                                max=\"6\"\r\n                                onChange={Change_Rounds}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <h3>\r\n                                Time ka slider\r\n                            </h3>\r\n                            <input\r\n                                defaultValue=\"20\"\r\n                                type=\"range\"\r\n                                min=\"10\"\r\n                                max=\"80\"\r\n                                onChange={Change_Time}\r\n                            />\r\n                        </div>\r\n                        <button onClick={Start_The_Game}>Enter Room</button>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <h2>\r\n                            Please Wait for the host to start the game\r\n                        </h2>\r\n                    </div>\r\n                }\r\n            </div>\r\n        }\r\n        </div>\r\n    );\r\n}\r\nexport default Lobby","/home/dhairya/Desktop/Scribble/skribbl-/chatfrontend/src/store/reducer/process.js",[],"/home/dhairya/Desktop/Scribble/skribbl-/chatfrontend/src/home/home.js",[],"/home/dhairya/Desktop/Scribble/skribbl-/chatfrontend/src/game/game.js",[],"/home/dhairya/Desktop/Scribble/skribbl-/chatfrontend/src/game/scores/scores.js",[],"/home/dhairya/Desktop/Scribble/skribbl-/chatfrontend/src/game/words/words.js",[],"/home/dhairya/Desktop/Scribble/skribbl-/chatfrontend/src/game/canvas/canvas.js",[],"/home/dhairya/Desktop/Scribble/skribbl-/chatfrontend/src/game/chat/chat.js",[],"/home/dhairya/Desktop/Scribble/skribbl-/chatfrontend/src/game/timer/timer.js",["58"],"import React, { useState, useEffect } from \"react\";\n\n\nconst Timer = ({timelimit,socket,user,drawer}) => {\n  const [seconds, setSeconds] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n\n  /*function toggle() {\n    setIsActive(!isActive);\n  }*/\n\n  function reset() {\n    setSeconds(0);\n    setIsActive(false);\n  }\n\n  socket.on(\"time_change\",(data)=>{\n    setSeconds(data.seconds)\n  });\n\n\n  socket.on(\"Start_Timer\",() => {\n    reset();\n    setIsActive(true);\n  })\n\n socket.on(\"Reset_Timer\",() =>{\n   reset();\n }) \n  \n\n  \n/*  useEffect(() => {    \n    let interval = null;\n    if (isActive) {\n      if(seconds<timelimit){\n        interval = setInterval(() => {\n          setSeconds(seconds => seconds + 1);\n        }, 1000);\n      }\n    } else if (!isActive && seconds !== 0) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [isActive, seconds, timelimit]);*/\n\n  useEffect(() => {    \n    let interval = null;\n      if(seconds<timelimit && isActive){\n        interval = setInterval(() => {\n          setSeconds(seconds => seconds + 1);\n        }, 1000);\n      }\n      else if(seconds === timelimit && isActive){\n        if(user.id === drawer.id){\n        socket.emit(\"time_over\",user.room);}\n        setSeconds(0);\n        setIsActive(false);\n        clearInterval(interval);\n      }\n    return () => clearInterval(interval);\n  }, [isActive,seconds, timelimit]);\n\n  return(\n      <div>\n        <div>\n          {timelimit - seconds}s\n        </div>\n      </div>\n    );\n  };\n\nexport default Timer;\n",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":19,"column":5,"nodeType":"65","endLine":19,"endColumn":7,"suggestions":"66"},{"ruleId":"67","severity":1,"message":"68","line":4,"column":10,"nodeType":"69","messageId":"70","endLine":4,"endColumn":18},{"ruleId":"63","severity":1,"message":"71","line":11,"column":7,"nodeType":"65","endLine":11,"endColumn":15,"suggestions":"72"},{"ruleId":"63","severity":1,"message":"73","line":62,"column":6,"nodeType":"65","endLine":62,"endColumn":35,"suggestions":"74"},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'settings'. Either include it or remove the dependency array.","ArrayExpression",["77"],"no-unused-vars","'Userlist' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'roomname'. Either include it or remove the dependency array.",["78"],"React Hook useEffect has missing dependencies: 'drawer.id', 'socket', 'user.id', and 'user.room'. Either include them or remove the dependency array.",["79"],"no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},"Update the dependencies array to be: [settings]",{"range":"86","text":"87"},"Update the dependencies array to be: [roomname, socket]",{"range":"88","text":"89"},"Update the dependencies array to be: [drawer.id, isActive, seconds, socket, timelimit, user.id, user.room]",{"range":"90","text":"91"},[574,576],"[settings]",[392,400],"[roomname, socket]",[1382,1411],"[drawer.id, isActive, seconds, socket, timelimit, user.id, user.room]"]