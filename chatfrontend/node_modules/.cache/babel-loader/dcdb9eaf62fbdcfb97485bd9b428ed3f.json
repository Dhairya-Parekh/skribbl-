{"ast":null,"code":"var _jsxFileName = \"/home/nsr/new/skribbl-/chatfrontend/src/game/timer/timer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timer = ({\n  timelimit,\n  socket,\n  user,\n  drawer\n}) => {\n  _s();\n\n  const [seconds, setSeconds] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n  socket.on(\"time_change\", data => {\n    setSeconds(data.seconds);\n  });\n\n  function toggle() {\n    setIsActive(!isActive);\n  }\n\n  function reset() {\n    setSeconds(0);\n    setIsActive(false);\n  }\n\n  useEffect(() => {\n    let interval = null;\n\n    if (isActive) {\n      if (seconds < timelimit) {\n        interval = setInterval(() => {\n          setSeconds(seconds => seconds + 1);\n        }, 1000);\n      }\n    } else if (!isActive && seconds !== 0) {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [isActive, seconds]);\n\n  if (user.id === drawer.id) {\n    socket.emit(\"time\", seconds);\n\n    if (seconds > timelimit) {\n      reset();\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [timelimit - seconds, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggle,\n          children: isActive ? 'Pause' : 'Start'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: reset,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [timelimit - seconds, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(Timer, \"HjAIbd49zoP8n+oOlWwUpn38Z08=\");\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/home/nsr/new/skribbl-/chatfrontend/src/game/timer/timer.js"],"names":["React","useState","useEffect","Timer","timelimit","socket","user","drawer","seconds","setSeconds","isActive","setIsActive","on","data","toggle","reset","interval","setInterval","clearInterval","id","emit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAGA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAWC,EAAAA,MAAX;AAAkBC,EAAAA,IAAlB;AAAuBC,EAAAA;AAAvB,CAAD,KAAoC;AAAA;;AAChD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;AACAI,EAAAA,MAAM,CAACO,EAAP,CAAU,aAAV,EAAyBC,IAAD,IAAQ;AAC9BJ,IAAAA,UAAU,CAACI,IAAI,CAACL,OAAN,CAAV;AACD,GAFD;;AAGA,WAASM,MAAT,GAAkB;AAChBH,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD;;AAED,WAASK,KAAT,GAAiB;AACfN,IAAAA,UAAU,CAAC,CAAD,CAAV;AACAE,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD;;AAEDT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,QAAQ,GAAG,IAAf;;AACA,QAAIN,QAAJ,EAAc;AACZ,UAAGF,OAAO,GAACJ,SAAX,EAAqB;AACnBY,QAAAA,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC3BR,UAAAA,UAAU,CAACD,OAAO,IAAIA,OAAO,GAAG,CAAtB,CAAV;AACD,SAFqB,EAEnB,IAFmB,CAAtB;AAGD;AACF,KAND,MAMO,IAAI,CAACE,QAAD,IAAaF,OAAO,KAAK,CAA7B,EAAgC;AACrCU,MAAAA,aAAa,CAACF,QAAD,CAAb;AACD;;AACD,WAAO,MAAME,aAAa,CAACF,QAAD,CAA1B;AACD,GAZQ,EAYN,CAACN,QAAD,EAAWF,OAAX,CAZM,CAAT;;AAcA,MAAGF,IAAI,CAACa,EAAL,KAAUZ,MAAM,CAACY,EAApB,EAAuB;AACrBd,IAAAA,MAAM,CAACe,IAAP,CAAY,MAAZ,EAAmBZ,OAAnB;;AACA,QAAGA,OAAO,GAACJ,SAAX,EAAqB;AACnBW,MAAAA,KAAK;AACN;;AACD,wBACE;AAAA,8BACE;AAAA,mBACGX,SAAS,GAAGI,OADf;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAEM,MAAjB;AAAA,oBACGJ,QAAQ,GAAG,OAAH,GAAa;AADxB;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAQ,UAAA,OAAO,EAAEK,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD,GApBD,MAqBI;AACF,wBACE;AAAA,6BACE;AAAA,mBACGX,SAAS,GAAGI,OADf;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;AACF,CA3DD;;GAAML,K;;KAAAA,K;AA6DN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\n\nconst Timer = ({timelimit,socket,user,drawer}) => {\n  const [seconds, setSeconds] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n  socket.on(\"time_change\",(data)=>{\n    setSeconds(data.seconds)\n  });\n  function toggle() {\n    setIsActive(!isActive);\n  }\n\n  function reset() {\n    setSeconds(0);\n    setIsActive(false);\n  }\n\n  useEffect(() => {    \n    let interval = null;\n    if (isActive) {\n      if(seconds<timelimit){\n        interval = setInterval(() => {\n          setSeconds(seconds => seconds + 1);\n        }, 1000);\n      }\n    } else if (!isActive && seconds !== 0) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [isActive, seconds]);\n\n  if(user.id===drawer.id){\n    socket.emit(\"time\",seconds)\n    if(seconds>timelimit){\n      reset()\n    }\n    return(\n      <div>\n        <div>\n          {timelimit - seconds}s\n        </div>\n        <div>\n          <button onClick={toggle}>\n            {isActive ? 'Pause' : 'Start'}\n          </button>\n          <button onClick={reset}>\n            Reset\n          </button>\n        </div>\n      </div>\n    );\n  }\n  else{\n    return(\n      <div>\n        <div>\n          {timelimit - seconds}s\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Timer;\n\n"]},"metadata":{},"sourceType":"module"}