{"ast":null,"code":"var _jsxFileName = \"/home/nsr/skribbl-/chatfrontend/src/game/chat/chat.js\",\n    _s = $RefreshSig$();\n\nimport \"./chat.scss\"; //import { to_Decrypt, to_Encrypt } from \"./aes.js\";\n//import { process } from \"../../store/action/index\";\n\nimport React, { useState, useEffect, useRef } from \"react\"; //import { useDispatch } from \"react-redux\";\n//gets the data from the action object and reducers defined earlier\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat({\n  username,\n  roomname,\n  socket\n}) {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const [messages, setMessages] = useState([]); //const dispatch = useDispatch();\n\n  /*const dispatchProcess = (msg) => {\n    dispatch(process(msg));\n  };*/\n\n  useEffect(() => {\n    socket.on(\"message\", data => {\n      //decypt the message\n      //const ans = to_Decrypt(data.text, data.username);\n      //dispatchProcess(false, ans, data.text);\n      console.log(data.text);\n      let temp = messages;\n      temp.push({\n        userId: data.userId,\n        username: data.username,\n        text: data.text\n      });\n      setMessages([...temp]);\n    });\n  }, [socket]);\n\n  const sendData = () => {\n    if (text !== \"\") {\n      //encrypt the message here\n      //const ans = to_Encrypt(text);\n      socket.emit(\"chat\", text);\n      setText(\"\");\n    }\n  };\n\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  useEffect(scrollToBottom, [messages]);\n  console.log(messages, \"mess\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-name\",\n      children: /*#__PURE__*/_jsxDEV(\"ceter\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Skribbl Skribbl\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-message\",\n      children: [messages.map(i => {\n        if (i.username === username) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message mess-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: i.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: i.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [i.text, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: i.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this);\n        }\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"send\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Type your answer here\",\n        value: text,\n        onChange: e => setText(e.target.value),\n        onKeyPress: e => {\n          if (e.key === \"Enter\") {\n            sendData();\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendData,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"HOZAuVicutE7kHuMO7If7mHVKC8=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/nsr/skribbl-/chatfrontend/src/game/chat/chat.js"],"names":["React","useState","useEffect","useRef","Chat","username","roomname","socket","text","setText","messages","setMessages","on","data","console","log","temp","push","userId","sendData","emit","messagesEndRef","scrollToBottom","current","scrollIntoView","behavior","map","i","e","target","value","key"],"mappings":"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","sourcesContent":["import \"./chat.scss\";\n//import { to_Decrypt, to_Encrypt } from \"./aes.js\";\n//import { process } from \"../../store/action/index\";\nimport React, { useState, useEffect, useRef } from \"react\";\n//import { useDispatch } from \"react-redux\";\n//gets the data from the action object and reducers defined earlier\nfunction Chat({ username, roomname, socket }) {\n  const [text, setText] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  //const dispatch = useDispatch();\n  \n  /*const dispatchProcess = (msg) => {\n    dispatch(process(msg));\n  };*/\n\n  useEffect(() => {\n    socket.on(\"message\", (data) => {\n      //decypt the message\n      //const ans = to_Decrypt(data.text, data.username);\n      //dispatchProcess(false, ans, data.text);\n      console.log(data.text);\n      let temp = messages;\n      temp.push({\n        userId: data.userId,\n        username: data.username,\n        text: data.text,\n      });\n      setMessages([...temp]);\n    });\n  }, [socket]);\n\n  const sendData = () => {\n    if (text !== \"\") {\n      //encrypt the message here\n      //const ans = to_Encrypt(text);\n      socket.emit(\"chat\",text);\n      setText(\"\");\n    }\n  };\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(scrollToBottom, [messages]);\n\n  console.log(messages, \"mess\");\n\n  return(\n    <div className=\"chat\">\n      <div className=\"user-name\">\n      <ceter>\n        <h2>\n            Skribbl Skribbl\n        </h2>\n      </ceter>\n      </div>\n      <div className=\"chat-message\">\n        {messages.map((i) => {\n          if (i.username === username) {\n            return (\n              <div className=\"message mess-right\">\n                <p>{i.text}</p>\n                <span>{i.username}</span>\n              </div>\n            );\n          } else {\n            return (\n              <div className=\"message\">\n                <p>{i.text} </p>\n                <span>{i.username}</span>\n              </div>\n            );\n          }\n        })}\n        <div ref={messagesEndRef} />\n      </div>\n      <div className=\"send\">\n        <input\n          placeholder=\"Type your answer here\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          onKeyPress={(e) => {\n            if (e.key === \"Enter\") {\n              sendData();\n            }\n          }}\n        ></input>\n        <button onClick={sendData}>Send</button>\n      </div>\n        </div>\n  );\n}\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}