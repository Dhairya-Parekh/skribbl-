{"ast":null,"code":"var _jsxFileName = \"/home/nsr/new2/skribbl-/chatfrontend/src/game/canvas/canvas.js\",\n    _s = $RefreshSig$();\n\nimport CanvasDraw from \"react-canvas-draw\";\nimport React, { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Canvas({\n  user,\n  drawer,\n  socket\n}) {\n  _s();\n\n  console.log(\"canvas call ho raha hai drawer: \", drawer.username);\n  const CanvasRef = useRef();\n  const [data, setData] = useState(\"\");\n  const [brushSize, setbrushSize] = useState(12);\n  const [brushColor, setbrushColor] = useState(\"#444\");\n  socket.on(\"do_drawing\", data => {\n    setData(data.draw_data);\n  });\n\n  function Change_Brush_Size(e) {\n    setbrushSize(Number(e.currentTarget.value));\n  }\n\n  function Change_Brush_Color(e) {\n    setbrushColor(e.currentTarget.value);\n  }\n\n  function Clear_Canvas(e) {\n    CanvasRef.current.clear();\n    const drawing_data = CanvasRef.current.getSaveData();\n    socket.emit(\"draw\", drawing_data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: user.id === drawer.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CanvasDraw, {\n        canvasWidth: 800,\n        canvasHeight: 800,\n        ref: CanvasRef,\n        hideGrid: true,\n        brushRadius: brushSize,\n        brushColor: brushColor,\n        onChange: () => {\n          const drawing_data = CanvasRef.current.getSaveData();\n          socket.emit(\"draw\", drawing_data);\n          setData(drawing_data);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          defaultValue: \"10\",\n          type: \"range\",\n          min: \"1\",\n          max: \"30\",\n          onChange: Change_Brush_Size\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          id: \"toolColorPicker\",\n          onChange: Change_Brush_Color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: Clear_Canvas,\n          children: \"Eraser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"under constrution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          defaultValue: \"10\",\n          type: \"range\",\n          min: \"1\",\n          max: \"30\",\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Canvas, \"SwYgg7iHF5Z2SgdhMqCnfr2T8uo=\");\n\n_c = Canvas;\nexport default Canvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"sources":["/home/nsr/new2/skribbl-/chatfrontend/src/game/canvas/canvas.js"],"names":["CanvasDraw","React","useState","useRef","Canvas","user","drawer","socket","console","log","username","CanvasRef","data","setData","brushSize","setbrushSize","brushColor","setbrushColor","on","draw_data","Change_Brush_Size","e","Number","currentTarget","value","Change_Brush_Color","Clear_Canvas","current","clear","drawing_data","getSaveData","emit","id"],"mappings":"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","sourcesContent":["import CanvasDraw from \"react-canvas-draw\";\r\nimport React, { useState, useRef} from \"react\";\r\nfunction Canvas({user, drawer, socket }){\r\n    console.log(\"canvas call ho raha hai drawer: \",drawer.username)\r\n    const CanvasRef = useRef()\r\n    const [data, setData] = useState(\"\");\r\n    const [brushSize, setbrushSize] = useState(12);\r\n    const [brushColor, setbrushColor] = useState(\"#444\")\r\n    socket.on(\"do_drawing\",(data)=>{\r\n        setData(data.draw_data)\r\n    });\r\n    function Change_Brush_Size(e){\r\n        setbrushSize(Number(e.currentTarget.value))\r\n    }\r\n    function Change_Brush_Color(e){\r\n        setbrushColor(e.currentTarget.value)\r\n    }\r\n    function Clear_Canvas(e){\r\n        CanvasRef.current.clear()\r\n        const drawing_data = CanvasRef.current.getSaveData()\r\n        socket.emit(\"draw\",drawing_data)\r\n    }\r\n    return(\r\n        <div>\r\n            {user.id===drawer.id ? \r\n                <div>\r\n                    <CanvasDraw \r\n                        canvasWidth = {800}\r\n                        canvasHeight= {800}\r\n                        ref = { CanvasRef }\r\n                        hideGrid\r\n                        brushRadius = {brushSize}\r\n                        brushColor = {brushColor}\r\n                        onChange={() => \r\n                            {\r\n                                const drawing_data = CanvasRef.current.getSaveData()\r\n                                socket.emit(\"draw\",drawing_data);\r\n                                setData(drawing_data);\r\n                            }\r\n                        } \r\n                    />\r\n                    <div>\r\n                        <input\r\n                            defaultValue=\"10\"\r\n                            type=\"range\"\r\n                            min=\"1\"\r\n                            max=\"30\"\r\n                            onChange={Change_Brush_Size}\r\n                        />\r\n                        <input\r\n                            type=\"color\"\r\n                            id=\"toolColorPicker\"\r\n                            onChange={Change_Brush_Color}\r\n                        />\r\n                        <button\r\n                            onClick={Clear_Canvas}>             \r\n                        Eraser</button>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            :\r\n                <div>\r\n                    <h2>\r\n                        under constrution\r\n                    </h2>\r\n                    <div>\r\n                        <input\r\n                            defaultValue=\"10\"\r\n                            type=\"range\"\r\n                            min=\"1\"\r\n                            max=\"30\"\r\n                            disabled\r\n                        />\r\n                        <input\r\n                            type=\"color\"\r\n                            disabled\r\n                        />\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n    \r\n}\r\nexport default Canvas;"]},"metadata":{},"sourceType":"module"}